# Values needed for Teknoir AI NVR
nvr:
  camera:
    type: camera
    uri: rtsp://host:port/path
    # GST pipeline variable substitution:
    # - uri: nvr.camera.uri
    # - camera_id: release full name | fullnameOverride
    pipeline: videotestsrc pattern=ball flip=true animation-mode=wall-time ! queue ! nvvideoconvert ! video/x-raw(memory:NVMM),width=1920,height=1080 ! tee name=t t. ! nvvideoconvert ! video/x-raw(memory:NVMM),width=[1,1920],height=[1,1080],pixel-aspect-ratio=1/1 ! nvvideoconvert ! queue ! nvjpegenc quality=55 ! appsink sync=0 name=mqttsink t. ! nvvideoconvert ! video/x-raw,format=RGB,width=[1,640],height=[1,360],pixel-aspect-ratio=1/1 ! nvvideoconvert ! motioncells threshold=0.0001 gridx=32 gridy=18 ! fakesink
  # This is to override the chart name.
  nameOverride: ""
  fullnameOverride: ""
  # The path to the models directory
  modelRepositoryPath: /opt/teknoir/models
  # The path to the video storage
  videoStoragePath: /tmp/teknoir/videos
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: us-docker.pkg.dev/teknoir/gcr.io/nvr
    # Overrides the image tag whose default is "ds7-gst1.24.7".
    # ds7-gst1.24.7: Nvidia Ada Lovelace GPU on AMD64
    # ds7-gst1.24.7-l4t: Nvidia Orin(tegra) on ARM64
    tag: ds7-gst1.24.7
  # Set the log level for the nvr
  # - DEBUG
  # - INFO
  # - WARNING
  # - ERROR
  debugLevel: INFO
  mqtt:
    # Local MQTT broker
    broker: mqtt.kube-system
    port: 1883
    qos: 2
    keepAliveInterval: 10
    connectRetryInterval: 10
    # Topic prefix for generated topic <topicPrefix>/<camera_id: release full name | fullnameOverride>
    topicPrefix: camera/frames
    # Number of frames to queue before dropping
    queueLimit: 15
    # Send metrics collected through MQTT
    metrics: true
    metricsTopic: toe/state
    # Send events without inference calculated
    nonInferenceEvents: true
    # Send events without motion detected
    nonMotionEvents: true
  motion:
    # Number of frames to skip inference when no motion detected
    inactiveInterval: 900
    # Number of frames to skip inference when motion is detected
    activeInterval: 0
  healthz:
    fpsThreshold: 0.01
  resources:
     limits:
       cpu: 2000m
       memory: 2048Mi
     requests:
       cpu: 100m
       memory: 128Mi
  # Deprecated in favor of ORG TREE
  location:
    country: "us"
    region: "texas"
    branch: "houston"
    facility: "office"
    site: "interior"
    zone: "test"
    group: "poc"
















# Default values for nvr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
