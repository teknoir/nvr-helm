apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nvr.fullname" . }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ include "nvr.fullname" . }}
  template:
    metadata:
      labels:
        teknoir.org/app: {{ include "nvr.fullname" . }}
        app: {{ include "nvr.fullname" . }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      runtimeClassName: nvidia
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 6
            failureThreshold: 10
          envFrom:
            - configMapRef:
                name: "{{ include "nvr.fullname" . }}-env-config"
          resources:
            { { - toYaml .Values.nvr.resources | nindent 12 } }
          volumeMounts:
            - name: model-volume
              mountPath: /models
            - name: video-storage
              mountPath: /app/videos
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: model-volume
          hostPath:
            path: {{ .Values.nvr.modelRepositoryPath }}
            type: DirectoryOrCreate
        - name: video-storage
          hostPath:
            path: {{ .Values.nvr.videoStoragePath }}
            type: DirectoryOrCreate
        # Nvidia has the argus socket mounted under /tmp/argus_socket
        - name: tmp
          hostPath:
            path: /tmp
            type: DirectoryOrCreate




#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: {{ include "nvr.fullname" . }}
#  labels:
#    {{- include "nvr.labels" . | nindent 4 }}
#spec:
#  {{- if not .Values.autoscaling.enabled }}
#  replicas: {{ .Values.replicaCount }}
#  {{- end }}
#  selector:
#    matchLabels:
#      {{- include "nvr.selectorLabels" . | nindent 6 }}
#  template:
#    metadata:
#      {{- with .Values.podAnnotations }}
#      annotations:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      labels:
#        {{- include "nvr.labels" . | nindent 8 }}
#        {{- with .Values.podLabels }}
#        {{- toYaml . | nindent 8 }}
#        {{- end }}
#    spec:
#      {{- with .Values.imagePullSecrets }}
#      imagePullSecrets:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      serviceAccountName: {{ include "nvr.serviceAccountName" . }}
#      securityContext:
#        {{- toYaml .Values.podSecurityContext | nindent 8 }}
#      containers:
#        - name: {{ .Chart.Name }}
#          securityContext:
#            {{- toYaml .Values.securityContext | nindent 12 }}
#          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
#          imagePullPolicy: {{ .Values.image.pullPolicy }}
#          ports:
#            - name: http
#              containerPort: {{ .Values.service.port }}
#              protocol: TCP
#          livenessProbe:
#            {{- toYaml .Values.livenessProbe | nindent 12 }}
#          readinessProbe:
#            {{- toYaml .Values.readinessProbe | nindent 12 }}
#          resources:
#            {{- toYaml .Values.resources | nindent 12 }}
#          {{- with .Values.volumeMounts }}
#          volumeMounts:
#            {{- toYaml . | nindent 12 }}
#          {{- end }}
#      {{- with .Values.volumes }}
#      volumes:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      {{- with .Values.nodeSelector }}
#      nodeSelector:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      {{- with .Values.affinity }}
#      affinity:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
#      {{- with .Values.tolerations }}
#      tolerations:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
