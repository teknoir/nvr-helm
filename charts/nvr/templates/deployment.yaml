apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nvr.fullname" . }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ include "nvr.fullname" . }}
  template:
    metadata:
      labels:
        teknoir.org/app: {{ include "nvr.fullname" . }}
        app: {{ include "nvr.fullname" . }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      runtimeClassName: nvidia
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.nvr.image.repository }}:{{ .Values.nvr.image.tag }}"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 6
            failureThreshold: 10
          envFrom:
            - configMapRef:
                name: {{ include "nvr.configmapName" . }}
          resources:
            {{- toYaml .Values.nvr.resources | nindent 12 }}
          volumeMounts:
            - name: model-volume
              mountPath: /models
            - name: video-storage
              mountPath: /app/videos
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: model-volume
          hostPath:
            path: {{ .Values.nvr.modelRepositoryPath }}
            type: DirectoryOrCreate
        - name: video-storage
          hostPath:
            path: {{ .Values.nvr.videoStoragePath }}
            type: DirectoryOrCreate
        # Nvidia has the argus socket mounted under /tmp/argus_socket
        - name: tmp
          hostPath:
            path: /tmp
            type: DirectoryOrCreate
